import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.QuerySolution;
import org.apache.jena.query.ResultSet;
import org.apache.jena.query.ResultSetFactory;
import org.apache.jena.query.ResultSetFormatter;
import org.apache.jena.rdf.model.Literal;
import org.apache.jena.rdf.model.Resource;
import org.apache.jena.sparql.engine.http.QueryEngineHTTP;
import org.apache.jena.sparql.engine.http.QueryExceptionHTTP;
import org.apache.jena.arq.*;





public class queryDBpedia {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String service = "http://dbpedia.org/sparql";
		String queryTest = "ASK {}";
		//String queryString = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT ?class WHERE {?class rdf:type owl:Class . ?entity rdf:type ?class . } GROUP BY ?class LIMIT 10";
		String queryString = "PREFIX a: <http://www.w3.org/2005/Atom>" +
								"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> " +
								"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> " +
								"PREFIX owl: <http://www.w3.org/2002/07/owl#> " +
								
//								"SELECT ?class (COUNT(?entity) AS ?total) WHERE { " +
//									   "?class a owl:Class  . " +
//									   "?entity a ?class . " +
//									"} " +
//									"GROUP BY ?class  " +
//									"ORDER BY DESC(?total)";
////									"LIMIT 100";
									
		"SELECT ?class (COUNT(?entity) AS ?count) WHERE { ?class a owl:Class . ?entity a ?class . } GROUP BY ?class ORDER BY DESC(?count)";
//		 "SELECT ?class (COUNT(?entity) AS ?count) WHERE {?class a owl:Class . ?entity a ?class . } GROUP BY ?class ORDER BY DESC(COUNT(?entity)) LIMIT 10";
//		"SELECT ?class (count(?entity) as ?total) WHERE { ?class a owl:Class . ?entity a ?class . } GROUP BY ?class ORDER BY DESC (?total) LIMIT 10";
		
		Query query = QueryFactory.create(queryString);
		
//		   QuerySolutionMap initialBinding = new QuerySolutionMap();
//		   initialBinding.add("name", personResource);
//		   qe = QueryExecutionFactory.create(query, dataset, initialBinding);
//		
		QueryExecution qeTest = QueryExecutionFactory.sparqlService(service, queryTest);
		
//		QueryExecution qe = QueryExecutionFactory.sparqlService(service, query);
		
		QueryEngineHTTP objectToExec = (QueryEngineHTTP) QueryExecutionFactory.sparqlService(service, queryString);
		objectToExec.addParam("timeout","500000000"); //in milliseconds
		
 
			
		
		try {
			if(qeTest.execAsk()) {
				System.out.println(service + " is up");
				
//				ResultSet results = qe.execSelect() ;
				ResultSet results = objectToExec.execSelect();
			    results = ResultSetFactory.copyResults(results) ;
				
//			    String resultsAsString = ResultSetFormatter.asText(results);
//			    System.out.println(resultsAsString);
			    
			    String fileLocation = "./target/DBpedia_classes_count.txt";
			    File file = new File(fileLocation);
				try (FileOutputStream fop = new FileOutputStream(file)) {
					if (!file.exists()) {
						file.createNewFile();
					}
				    ResultSetFormatter.out(fop, results, query); 
				    System.out.println("file written to " + fileLocation);

				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			  
//			    ResultSetFormatter.out(System.out, results, query) ;
				
//			    for ( ; results.hasNext() ; ) {
//			      QuerySolution soln = results.nextSolution();
//			      Resource r = soln.getResource("?popPlace") ;
////			      Literal l = soln.getLiteral("popPlace") ; 
//			      System.out.println(r.toString());
////			      System.out.println(l);
//			    }
				
			}
			
			

			
//			ResultSet rs = qe.execSelect();
//
//			while (rs.hasNext()) {
//				String output = rs.next().toString();
//				System.out.println(output);
//			}
//			
			
		} catch (QueryExceptionHTTP e) {
			System.out.println(service + " is down: " + e);
		} finally {
//			qe.close();
			qeTest.close();
			objectToExec.close();
		}
	}

}
