import java.util.HashMap;


public class CountStringSimilarityResults {
	//x2y<kgClass<simMeasure, instanceCount>
	private HashMap<String, HashMap<String, HashMap<String, Integer>>> simResults  = new HashMap<String, HashMap<String, HashMap<String, Integer>>>();
	
	public CountStringSimilarityResults() {
	//result Object: HashMap<stringMeasureName, <HashMap<x2y, intScore>>
	//HashMap<String, HashMap<String, Integer>> results = new HashMap<String, HashMap<String, Integer>>();
	}
	
	/**
	   * Get the number of instances that overlap
	   * @param x2y (fromKG-toKG, available values:d,y,o,n,w. e.g. d2y)
	   * @param kgClass (class of the fromKG)
	   * @param simMeasure (exactMatch, jaccard, jaro, scaledLevenstein, tfidf, jaroWinkler)
	   * @return int (instance overlap count)
	   */
	public int getInstanceOverlapCount(String x2y, String kgClass, String simMeasure) {
		return this.simResults.get(x2y).get(kgClass).get(simMeasure);
	}
	
	
}
